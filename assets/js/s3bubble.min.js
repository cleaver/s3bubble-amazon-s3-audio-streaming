(function() {
	/*jQuery(document).ready(function($) {
		
		var base64 = {};
		base64.PADCHAR = "=";
		base64.ALPHA = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
		base64.makeDOMException = function() {
			var e, t;
			try {
				return new DOMException(DOMException.INVALID_CHARACTER_ERR);
			} catch (t) {
				var n = new Error("DOM Exception 5");
				n.code = n.number = 5;
				n.name = n.description = "INVALID_CHARACTER_ERR";
				n.toString = function() {
					return "Error: " + n.name + ": " + n.message;
				};
				return n;
			}
		};
		base64.getbyte64 = function(e, t) {
			var n = base64.ALPHA.indexOf(e.charAt(t));
			if (n === -1) {
				throw base64.makeDOMException();
			}
			return n;
		};
		base64.decode = function(e) {
			e = "" + e;
			var t = base64.getbyte64;
			var n, r, i;
			var s = e.length;
			if (s === 0) {
				return e;
			}
			if (s % 4 !== 0) {
				throw base64.makeDOMException();
			}
			n = 0;
			if (e.charAt(s - 1) === base64.PADCHAR) {
				n = 1;
				if (e.charAt(s - 2) === base64.PADCHAR) {
					n = 2;
				}
				s -= 4;
			}
			var o = [];
			for ( r = 0; r < s; r += 4) {
				i = t(e, r) << 18 | t(e, r + 1) << 12 | t(e, r + 2) << 6 | t(e, r + 3);
				o.push(String.fromCharCode(i >> 16, i >> 8 & 255, i & 255));
			}
			switch (n) {
				case 1:
					i = t(e, r) << 18 | t(e, r + 1) << 12 | t(e, r + 2) << 6;
					o.push(String.fromCharCode(i >> 16, i >> 8 & 255));
					break;
				case 2:
					i = t(e, r) << 18 | t(e, r + 1) << 12;
					o.push(String.fromCharCode(i >> 16));
					break;
			}
			return o.join("");
		};
		$(".s3bubble-audio-single").each(function(t) {
			console.log(t);
			console.log($(this).attr("id"));
			var t = $(this).attr("id");
			var n = base64.decode($(this).data("userdata")).split("|");
            var r = n[0];
            var i = n[1];
            var s = $(this).data("bucket");
            var o = $(this).data("track");
            var u = $(this).data("download");
            var a = $(this).data("height");
            var f = $(this).data("s3hare");
            var l = $(this).data("autoplay");
            var c = $(this).data("style");
            var h = $(this).data("preload");
            var p = "metadata";
            if (h === "none") {
                p = "none";
            }
            var d = $(this).data("cloudfront");
            var v = "mp3,m4a";
            if (d) {
                v = "rtmpa";
                p = "none";
                if (navigator.userAgent.match(/(iPhone|iPod|iPad|Android|BlackBerry)/)) {
                    v = "mp3,m4a";
                }
                if (d === "") {
                    alert("If you have rtmp cloudfront streaming set you also need to supply the cloudfront url within your shortcode example: cloudfront=<!-- your url -->.cloudfront.net.");
                }
            }
            var m = $(this).data("solution");
            if (l) {
                var l = $(this).data("autoplay");
            } else {
                var l = false;
            }
            if ($(this).width() < 400) {
                $("#s3-single-container-" + t + " .s3-time-container").css("display", "none");
            }
            $(".s3-poweredby").hide();
            var g = new jPlayerPlaylist({
                jPlayer: "#s3-single-player-" + t,
                cssSelectorAncestor: "#s3-single-container-" + t
            }, g, {
                playlistOptions: {
                    autoPlay: l,
                    displayTime: 0,
                    download: u,
                    share: f,
                    playerWidth: $(this).width(),
                    enableRemoveControls: false
                },
                ready: function(event) {
                	g.setPlaylist(n);
                },
                swfPath: "https://soaudible.s3.amazonaws.com/audio/Jplayer.swf",
                preload: p,
                cssSelector: {
                    play: ".s3-play",
                    pause: ".s3-pause",
                    mute: ".s3-mute",
                    unmute: ".s3-unmute",
                    seekBar: ".s3-seek-bar",
                    playBar: ".s3-play-bar",
                    currentTime: ".s3-current-time",
                    duration: ".s3-duration"
                },
                noConflict: "jQuery",
                consoleAlerts: true,
                wmode: "window"
            });
		});

	});
	*/
})();
